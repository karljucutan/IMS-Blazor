@page "/addproduct"

@inject IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager

<h3>Add Product</h3>
<br />

<EditForm Model="Product" FormName="formProduct" OnValidSubmit="Save">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Product Name</label>
        <InputText id="name"
                   @bind-Value="Product.ProductName"
                   class="form-control">
        </InputText>
        <ValidationMessage For="() => Product.ProductName"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity"
                     @bind-Value="Product.Quantity"
                     class="form-control">
        </InputNumber>
        <ValidationMessage For="() => Product.Quantity"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price"
                     @bind-Value="Product.Price"
                     class="form-control">
        </InputNumber>
        <ValidationMessage For="() => Product.Price"></ValidationMessage>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    <a href="/products" class="btn btn-secondary">Cancel</a>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Product Product { get; set; } = new();

    private async Task Save()
    {
        await AddProductUseCase.ExecuteAsync(Product);

        NavigationManager.NavigateTo("/products");
    }
}
