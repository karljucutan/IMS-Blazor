@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<h3>Search Product</h3>

<div class="input-group">
    <input class="form-control"
           placeholder="Type something here to search"
           @bind="SearchFilter" />
    <button type="button" class="btn-success input-group-text" @onclick="HandleSearch">Search</button>
</div>

@if (inventories is not null && inventories.Any())
{
    <div style="overflow-y:auto; max-height:300px; border:1px solid silver; padding-top:5px">
        <ul style="list-style-type:none">
            @foreach (var inventory in inventories)
            {
                // The @key directive is used to optimize rendering performance by helping Blazor identify elements during updates,
                // similar to how indexing works for databases.
                <li @key="inventory.InventoryId" style="cursor: pointer">
                    @inventory.InventoryName
                </li>
            }
        </ul>
    </div>
}

@code {
    public string SearchFilter { get; set; } = string.Empty;
    private List<Inventory> inventories = new();

    private async Task HandleSearch()
    {
        inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(SearchFilter)).ToList();
    }
}